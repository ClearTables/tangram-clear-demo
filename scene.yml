cameras:
    perspective:
        type: perspective
        vanishing_point: [0, -500]

lights:
    directional1:
        type: directional
        direction: [.1, .5, -1]
        diffuse: .7
        ambient: .5
scene:
    background:
        color: &land-color '#f8f7f1'


styles:
    flatlines:
        base: lines
        lighting: false # ignore lights
    flatpolys:
        base: polygons
        lighting: false # ignore lights
    # This needs to be rendered on top of other lines, so we prefix the name with 0
    0railway:
        base: lines
        dash: [10, 10]


    buildings:
        base: polygons
        shaders:
            blocks:
                color: |
                    color.rgb *= vec3(min((worldPosition().z*.001 + .78),1.2));

sources:
    clear:
        type: MVT
        url: http://192.168.1.1:6789/osm-clear.tm2source/tile/{z}/{x}/{y}.pbf
        max_zoom: 16

layers:
    water:
        data: { source: mapzen}
        draw:
            polygons:
                order: 2
                color: &water-color '#88bbee'

    roads:
        data: { source: mapzen}
        labels:
            filter: { name: true }
            highway:
                filter: { kind: highway, $zoom: { min: 7 } }
                draw:
                    text:
                        font:
                            family: Helvetica
                            fill: white
                            size: 12px
                            weight: bold
            not_highway:
                filter: { not: { kind: highway }, $zoom: { min: 13 } }
                draw:
                    text:
                        font:
                            family: Helvetica
                            fill: black
                            size: 11px
    transportation:
        data: { source: clear}
        motorway:
            filter:
                class: [motorway]
            draw:
                flatlines:
                    order: 600
                    color: '#aab9d9'
                    width: function () { return 0.15*Math.exp(0.25*$zoom) * 156250*Math.exp(-$zoom*0.69) }
                    outline:
                        color: '#789fde'
                        width: &road-casing 1.5px
            ramp:
                filter:
                    ramp: [true]
                draw:
                    flatlines:
                        color: '#b7c7e7'
                        width: function () { return 0.2*Math.exp(0.19*$zoom) * 156250*Math.exp(-$zoom*0.69) }
                        outline:
                            color: '#86acec'
                            width: &ramp-casing 1px
        major:
            filter:
                - class: trunk
                  $zoom: {min: 4}
                - class: primary
                  $zoom: {min: 8}
                - class: secondary
                  $zoom: {min: 12}
            draw:
                flatlines:
                    order: 600
                    color: '#fee5b9'
                    width: function () { return 0.14*Math.exp(0.23*$zoom) * 156250*Math.exp(-$zoom*0.69) }
                    outline:
                        color: '#eac168'
                        width: *road-casing
        lessmajor:
            filter:
                - class: primary
                  $zoom: {min: 5, max: 8}
                - class: secondary
                  $zoom: {min: 8, max: 12}
                - class: tertiary
                  $zoom: {min: 12}
            draw:
                flatlines:
                    order: 600
                    color: '#f5eaa6'
                    width: function () { return 0.11*Math.exp(0.22*$zoom) * 156250*Math.exp(-$zoom*0.69) }
                    outline:
                        color: '#d5c953'
                        width: *road-casing
        minor:
            filter:
                - class: primary
                  $zoom: {min: 4, max: 5}
                - class: secondary
                  $zoom: {min: 6, max: 8}
                - class: tertiary
                  $zoom: {min: 8, max: 12}
                - class: [minor, unknown]
                  $zoom: {min: 12}
            draw:
                flatlines:
                    order: 600
                    color: '#ffffff'
                    width: function () { return 0.10*Math.exp(0.20*$zoom) * 156250*Math.exp(-$zoom*0.69) }
                    outline:
                        color: '#aaaaaa'
                        width: *road-casing
        service:
            filter:
                - class: service
                  $zoom: {min: 15}
            draw:
                flatlines:
                    order: 600
                    color: '#ffffff'
                    width: function () { return 0.09*Math.exp(0.18*$zoom) * 156250*Math.exp(-$zoom*0.69) }
                    outline:
                        color: '#aaaaaa'
                        width: *road-casing

        track:
            filter:
                - class: track
                  $zoom: {min: 15}
            draw:
                flatlines:
                    order: 600
                    color: '#ffffff'
                    width: function () { return 0.09*Math.exp(0.18*$zoom) * 156250*Math.exp(-$zoom*0.69) }
                    outline:
                        color: '#aaaaaa'
                        width: *road-casing

        path:
            filter:
                - class: path
                  $zoom: {min: 15}
            draw:
                flatlines:
                    order: 600
                    color: '#777'
                    width: function () { return 0.09*Math.exp(0.18*$zoom) * 156250*Math.exp(-$zoom*0.69) }
                    outline:
                        color: '#555'
                        width: *road-casing
        train:
            filter:
                - class: rail
                  $zoom: {min: 5, max: 10}
                - class: narrow_gauge
                  $zoom: {min: 6, max: 10}
            draw:
                flatlines:
                    order: 600
                    color: &rail-outer-color '#888'
                    width: function () { return 0.06*Math.exp(0.33*$zoom) * 156250*Math.exp(-$zoom*0.69) }
        hz-train:
            filter:
                - class: [rail, narrow_gauge]
                  $zoom: {min: 10}
            draw:
                0railway:
                    order: 600
                    color: white
                    width: 10
                lines:
                    order: 600
                    color: *rail-outer-color
                    width: 20


    buildings:
        data: { source: clear }
        filter: { $zoom: { min: 14 } }
        draw:
            polygons:
                order: 50
                color: '#E3DBDB'
        extruded:
            filter: { $zoom: { min: 15 } }
            draw:
                polygons:
                    style: buildings
                    extrude: function () { return feature.height > 0 || $zoom >= 16; }
